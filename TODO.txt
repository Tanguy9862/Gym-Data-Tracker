Graphiques:
	* https://plotly.com/python/line-charts/
	* https://plotly.com/python/line-and-scatter/ -> 'Connected Scatterplots'
	- Graphique (RPE - charge ; 2 ordonnées) en fn de la date
	- Graphique sleep_time c.f 'intégration du sleep time'

advanced_edit:
    - Actualiser le DF par rapport au nouveau formatage des données
    edit_performance:
        - Changer la façon d'éditer les perfs
            -> Affiche date + perf globale + notes + sleep time
            -> Même principe qu'avec l'ancien DF pour colonne edit/delete
            -> Si delete alors penser à bien supprimer la performance_id dans les 2 tables !!
            -> terminer get_edit_performance

edit_rm/exercice:
    - Prévoir le fait qu'il n'y ait pas de données et donc afficher une phrase en conséquence

Affichage du RPE dans les DF spécifiques (si celui-ci existe)

Quand on ajoute un nouvel exercice : penser à le passer en .title() avant de l'ajouter dans la db

Retravailler pr_details table:
    - Supprimer 'max_squat/deadlift/bench', récupérer le mouvement par le lift_id
    - Colonne 'weight'
    - lift_id 0 = squat, 1 = bench, 2 = deadlift

Retravailler pr_details:
    - Le BW sera initialement enregistré dans la table user_info
    - Pour chaque nouveau PR, on regardera le BW actuel dans user_info
    - Quand on change son BW : on change celui de user_info
        ->  donc la trace de tous les BW sera gardée dans pr_details

WILKS page:
    - /!\ Quand on supprime un PR le dernier graph n'est pas MAJ

Intégration du tempo

Intégration du sleep time
    - Graphique avec des points dont le diamètre augmente en fonction de la charge et vire au rouge si sommeil insuffisant

Développer la page profil user:
    - Bio

Page paramètres:
    - Pouvoir modifier son mot de passe
    - Pouvoir modifier son email
    - Choisir sa catégorie powerlifting (influence sur la prédiction de données)
    - Résilier son abonnement premium

Empêcher le fait d'ajouter un exercice si l'utilisateur en a déjà ajouté un du même nom auparavant

Refonte de la page advanced_edit:
    -> + Mettre dans l'ordre chronologique la date des perfs
    -> Pouvoir modifier le RPE

Ajout du  Token CSRF pour les form basiques:
    -> edit_performance
    -> login

Intégration des échecs ?
    -> Par exemple 5 reps à X kg au lieu de n reps prévues initialement

Envoyer un email lors de l'inscription

Editer le lien des routes (parfois user_id n'est pas nécessaire)

Système d'abonnement premium
    - Accès à la prédiction de données
    - Ne pas être limité dans l'ajout d'exercices

Contact pour le support

Détecter la première connexion
    - Afficher un message de bienvenue

Détecter la première connexion après une MAJ
    - Afficher un message relayant les nouveautés

Fichier __init__, regrouper les routes semblables par groupe dans un même fichier python
	- c.f favoris

Prédiction de données:
    - Prédire les futurs max sur 1 rep
        -> utiliser la data des compétitions de power des anciennes années
        -> prise en compte de la catégorie de power + bw + sexe


